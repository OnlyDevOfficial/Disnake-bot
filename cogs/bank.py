from disnake.ext import commands
from db import DataBase
import datetime
import config
import disnake
import random

class Bank(commands.Cog):
    def __init__(self , bot):
        self.bot = bot
        self.DataBase = DataBase("db.db")

    @commands.slash_command(description="–ü—Ä–µ–≤–æ–¥–∏ –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫ –ø–æ–∫–∞ –∏—Ö –Ω–µ —É–∫—Ä–∞–ª–∏!")
    async def to(self , ctx , bet: int , where: str = commands.Param(
        name="where",
        choices=['bank','to the account'])):
        user_name , money , level , bank , work = self.DataBase.data(ctx.author.id)
        if self.DataBase.check_settings_true_module(ctx.author.guild.name , "economy_commands"):
            if where == 'bank':
                if money >= bet:
                    if bank + bet > 5000000:
                        embed = disnake.Embed(
                            color=disnake.Color.red(),
                            title="–ë–∞–Ω–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω",
                            description=f"–í –±–∞–Ω–∫–µ –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ –±–æ–ª—å—à–µ 2000000üç¨"
                        )
                        
                        date = datetime.datetime.now()
                        embed.set_footer(text=f"{date}")

                        await ctx.send(embed=embed)
                        
                    else:

                        self.DataBase.bank(ctx.author.id , bet)
                        embed = disnake.Embed(
                            color=disnake.Color.green(),
                            title="–ü–µ—Ä–µ–≤–æ–¥ –≤ –±–∞–Ω–∫",
                            description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ –≤ –±–∞–Ω–∫ {bet}üç¨"
                        )
                        
                        date = datetime.datetime.now()
                        embed.set_footer(text=f"{date}")

                        await ctx.send(embed=embed)

                else:
                    embed = disnake.Embed(
                        color=disnake.Color.red(),
                        title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                        description=f"–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!"
                    )
                    
                    date = datetime.datetime.now()
                    embed.set_footer(text=f"{date}")

                    await ctx.send(embed=embed)

            elif where == 'to the account':
                if bank >= bet:
                    self.DataBase.take(ctx.author.id , bet)
                    embed = disnake.Embed(
                        color=disnake.Color.green(),
                        title="–°–Ω—è—Ç–∏–µ —Å –±–∞–Ω–∫–∞",
                        description=f"–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Å –∫–∞—Ä—Ç—ã {bet}üç¨"
                    )
                    
                    date = datetime.datetime.now()
                    embed.set_footer(text=f"{date}")

                    await ctx.send(embed=embed)

                else:
                    embed = disnake.Embed(
                        color=disnake.Color.red(),
                        title="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                        description=f"–ù–∞ –≤–∞—à–µ–π –∫–∞—Ä—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!"
                    )
                    
                    date = datetime.datetime.now()
                    embed.set_footer(text=f"{date}")
                    
                    await ctx.send(embed=embed)
                
        else:
            embed = disnake.Embed(
                title="–û—à–∏–±–∫–∞",
                description="–ö–æ–º–∞–Ω–¥—ã —ç–∫–æ–Ω–æ–º–∏–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ! –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –∏—Ö –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É **/settings** –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç",
                color=disnake.Color.red()
            )
            
            await ctx.send(embed=embed)

def setup(bot):
    bot.add_cog(Bank(bot))