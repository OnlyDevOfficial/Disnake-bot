import disnake
from disnake.ext import commands
from disnake.interactions import MessageInteraction
import config
from db import DataBase

class Menu_Select(disnake.ui.StringSelect):

    def __init__(self):
        options = [
            disnake.SelectOption(label="–ö–∞—Å—Å–∏—Ä" , description="30000üç¨"),
            disnake.SelectOption(label="–¢–µ–ª–µ–≤–µ–¥—É—â–∏–π" , description="100000üç¨"),
            disnake.SelectOption(label="–ë–∞–Ω–∫–∏—Ä" , description="300000üç¨")
        ]

        super().__init__(
            placeholder="–í–∞–∫–∞–Ω—Å–∏–∏",
            min_values=1,
            custom_id="–í–∞–∫–∞–Ω—Å–∏–∏",
            max_values=1,
            options=options
        )

        self.DataBase = DataBase('db.db')

    async def callback(self, inter: MessageInteraction):
        if self.values[0] == "–ö–∞—Å—Å–∏—Ä":
            user_name , balance , level , bank , work = self.DataBase.data(inter.author.id)
            if balance >= 30000:
                self.DataBase.hire(inter.author.id , "–ö–∞—Å—Å–∏—Ä")
                embed = disnake.Embed(
                    color=disnake.Color.green(),
                    description="–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É –∫–∞—Å—Å–∏—Ä–æ–º",
                    title='–†–∞–±–æ—Ç–∞'
                )

                await inter.response.send_message(embed=embed)

            else:
                embed = disnake.Embed(
                    color=disnake.Color.red(),
                    description="–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                    title='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤'
                )
                await inter.response.send_message(embed=embed)

        elif self.values[0] == "–¢–µ–ª–µ–≤–µ–¥—É—â–∏–π":
            user_name , balance , level , bank , work = self.DataBase.data(inter.author.id)
            if balance >= 100000:
                self.DataBase.hire(inter.author.id , "–¢–µ–ª–µ–≤–µ–¥—É—â–∏–π")
                embed = disnake.Embed(
                    color=disnake.Color.green(),
                    description="–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Ç–µ–ª–µ–≤–µ–¥—É—â–∏–º",
                    title='–†–∞–±–æ—Ç–∞'
                )
                await inter.response.send_message(embed=embed)

            else:
                embed = disnake.Embed(
                    color=disnake.Color.red(),
                    description="–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                    title='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤'
                )
                await inter.response.send_message(embed=embed)

        elif self.values[0] == "–ë–∞–Ω–∫–∏—Ä":
            user_name , balance , level , bank , work = self.DataBase.data(inter.author.id)
            if balance >= 300000:
                self.DataBase.hire(inter.author.id , "–ë–∞–Ω–∫–∏—Ä")
                embed = disnake.Embed(
                    color=disnake.Color.green(),
                    description="–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É –±–∞–Ω–∫–∏—Ä–æ–º",
                    title='–†–∞–±–æ—Ç–∞'
                )
                await inter.response.send_message(embed=embed)

            else:
                embed = disnake.Embed(
                    color=disnake.Color.red(),
                    description="–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                    title='–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤'
                )
                await inter.response.send_message(embed=embed)



class Hired(commands.Cog):
    def __init__(self , bot):
        self.bot = bot
        self.persistents_view_added = False


    @commands.slash_command(description="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–∞–±–æ—Ç–∞? –£—Å—Ç—Ä–æ–π—Å—è –Ω–∞ –¥—Ä—É–≥—É—é")
    @commands.has_permissions(administrator=True)
    async def hire(self , ctx):
        view = disnake.ui.View(timeout=None) 
        view.add_item(Menu_Select()) 
        await ctx.send(view=view)


def setup(bot):
    bot.add_cog(Hired(bot))