import disnake
from disnake.ext import commands
from disnake import MessageInteraction
import config

class Menu(disnake.ui.StringSelect):
    def __init__(self):
        options = [
            disnake.SelectOption(label="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è" , emoji="üìö"),
            disnake.SelectOption(label="–≠–∫–æ–Ω–æ–º–∏–∫–∞" ,  emoji="üì∞"),
            disnake.SelectOption(label="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã" , emoji="üåâ"),
        ]
        
        super().__init__(
            custom_id="Menu",
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç",
            max_values=1,
            min_values=1,
            options=options
        )

    async def callback(self, inter: MessageInteraction):
            if self.values[0] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è":
                embed = disnake.Embed(
                    color=disnake.Color.green(),
                    title="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è",
                    description="```/ban - –≤—ã–¥–∞—Ç—å –±–∞–Ω\n/kick - –≤—ã–¥–∞—Ç—å –∫–∏–∫\n/clear - –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n/news - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å```"
                )
                
                await inter.response.edit_message(embed=embed , view=Back())
            
            elif self.values[0] == "–≠–∫–æ–Ω–æ–º–∏–∫–∞":
                embed = disnake.Embed(
                    color=disnake.Color.green(),
                    title="–≠–∫–æ–Ω–æ–º–∏–∫–∞",
                    description="```/profile - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n/casino - –∏–≥—Ä–∞ –≤ –∫–∞–∑–∏–Ω–æ\n/guess - –∏–≥—Ä–∞ –≤ —É–≥–∞–¥–∞–π —á–∏–ª–æ\n/to - –ø–æ–ª–æ–∂–∏—Ç—å –∏–ª–∏ —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–∞\n/steal - –≤–æ—Ä–æ–≤–∞—Ç—å\n/work - —Ä–∞–±–æ—Ç–∞—Ç—å\n/transfer - –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏\n/buy - –∫—É–ø–∏—Ç—å —Ä–æ–ª—å\n/shop - –º–∞–≥–∞–∑–∏–Ω\n/leaderboard - –ø–∞—Ö–∞—Ä–∏ —Å–µ—Ä–≤–µ—Ä–∞```"
                )
                
                await inter.response.edit_message(embed=embed , view=Back())
                
            elif self.values[0] == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã":
                embed = disnake.Embed(
                    color=disnake.Color.green(),
                    title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã",
                    description="```/ab - –≤—ã—á–∏—Å–ª–∏—Ç—å\n/embed - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å embed —Å–æ–æ–±—â–µ–Ω–∏–µ\n/steam - —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ –≤ —Å—Ç–∏–º–µ\n/morse_code - –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –≤ –∞–∑–±—É–∫—É –º–æ—Ä–∑–µ\n/8ball - —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ –Ω–∏–±—É–¥—å —É 8ball```"
                )
                
                await inter.response.edit_message(embed=embed , view=Back())
                    
class Back(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        
    @disnake.ui.button(label="–ù–∞–∑–∞–¥" , style=disnake.ButtonStyle.gray , custom_id="back")
    async def back(self , button: disnake.ui.Button , inter: disnake.Interaction):    
        embed = disnake.Embed(
            color=disnake.Color.green(),
            title=f"Yakuza Help Menu",
            description="**–ö–∞—Ç–µ–≥–æ—Ä–∏–∏**\n\n> ‚úÖ –≠–∫–æ–Ω–æ–º–∏–∫–∞\n> ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è\n> ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã"
        )
        view = disnake.ui.View(timeout=None)
        view.add_item(Menu())
        await inter.response.edit_message(embed=embed , view=view)
        
                
class Help(commands.Cog):
    def __init__(self , bot):
        self.bot = bot

    @commands.slash_command(description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã —Å–µ—Ä–≤–µ—Ä–∞")
    async def help(self , ctx):        
        embed = disnake.Embed(
            color=disnake.Color.green(),
            title=f"Yakuza Help Menu",
            description="**–ö–∞—Ç–µ–≥–æ—Ä–∏–∏**\n\n> ‚úÖ –≠–∫–æ–Ω–æ–º–∏–∫–∞\n> ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è\n> ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã"
        )
        view = disnake.ui.View(timeout=None)
        view.add_item(Menu())
        await ctx.send(embed=embed , view=view)


def setup(bot):
    bot.add_cog(Help(bot))